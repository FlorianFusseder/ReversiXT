#ifndef CLOCK_H
#define CLOCK_H

#include <chrono>

namespace repu
{
	class clock
	{
		std::chrono::time_point<std::chrono::high_resolution_clock> start;
		std::chrono::time_point<std::chrono::high_resolution_clock> end;


	public:
		////////////////////////////////////////////////////
		//
		// creates and starts a clock
		//
		////////////////////////////////////////////////////
		clock();
		~clock();

		////////////////////////////////////////////////////
		//
		// restarts the clock
		//
		////////////////////////////////////////////////////
		void restart();

		////////////////////////////////////////////////////
		//
		// restarts the clock
		// and returns elapsed time in millisecons
		//
		////////////////////////////////////////////////////
		long long restartAsMilSecs();

		////////////////////////////////////////////////////
		//
		// restarts the clock
		// and returns elapsed time in seoconds
		//
		////////////////////////////////////////////////////
		double restartAsSecs();

		////////////////////////////////////////////////////
		//
		// returns elapsed time in millisecons
		//
		////////////////////////////////////////////////////
		long long getAsMilSecs();

		////////////////////////////////////////////////////
		//
		// returns elapsed time in seoconds
		//
		////////////////////////////////////////////////////
		double getAsSecs();

	};
}
#endif //CLOCK_H